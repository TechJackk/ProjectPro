{"ast":null,"code":"// import React, { useCallback, useEffect, useState } from 'react';\n// import AddProjectModal from './AddProjectModal';\n// import EditProjectModal from './EditProjectModal';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\n// import { Gear } from 'react-bootstrap-icons';\n// const Sidebar = ({ onAddProject, onDeleteProject }) => {\n//   const [isModalOpen, setModalState] = useState(false);\n//   const [isEditModalOpen, setEditModalOpen] = useState(false);\n//   const [projects, setProjects] = useState([]);\n//   const [selectedProject, setSelectedProject] = useState(null);\n//   const [paramsWindow, setParamsWindow] = useState(window.location.pathname.slice(1));\n//   const navigate = useNavigate();\n//   useEffect(() => {\n//     // Mock API call to fetch projects\n//     const mockProjects = [\n//       { _id: '1', title: 'Project 1', description: 'Description 1' },\n//       { _id: '2', title: 'Project 2', description: 'Description 2' },\n//     ];\n//     setProjects(mockProjects);\n//     document.addEventListener('projectUpdate', ({ detail }) => {\n//       setProjects((prevProjects) => [...prevProjects, detail]);\n//     });\n//     return () => {\n//       document.removeEventListener('projectUpdate', {}, false);\n//     };\n//   }, []);\n//   const handleLocation = (e, projectId) => {\n//     e.preventDefault();\n//     setParamsWindow(projectId);\n//     navigate(`/${projectId}`);\n//   };\n//   const openModal = useCallback(() => {\n//     setModalState(true);\n//   }, []);\n//   const closeModal = useCallback(() => {\n//     setModalState(false);\n//   }, []);\n//   const addProjectToList = (newProject) => {\n//     setProjects([...projects, newProject]);\n//     onAddProject(newProject);\n//   };\n//   const openEditModal = (project) => {\n//     setSelectedProject(project);\n//     setEditModalOpen(true);\n//   };\n//   const closeEditModal = () => {\n//     setEditModalOpen(false);\n//     setSelectedProject(null);\n//   };\n//   const editProject = (updatedProject) => {\n//     setProjects(projects.map((project) => (project._id === updatedProject._id ? updatedProject : project)));\n//   };\n//   const deleteProject = (projectId) => {\n//     setProjects(projects.filter((project) => project._id !== projectId));\n//     onDeleteProject(projectId);\n//   };\n//   return (\n//     <div className='py-5'>\n//       <div className=\"px-4 mb-3 flex items-center justify-between\">\n//         <span className='mr-2' style={{ marginRight: '25%' }}>Projects</span>\n//         <button onClick={openModal} className='bg-indigo-200 rounded-full p-[2px] focus:outline-none focus:ring focus:ring-indigo-200 focus:ring-offset-1'>\n//           <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"w-5 h-5 text-indigo-600\">\n//             <path fillRule=\"evenodd\" d=\"M12 5.25a.75.75 0 01.75.75v5.25H18a.75.75 0 010 1.5h-5.25V18a.75.75 0 01-1.5 0v-5.25H6a.75.75 0 010-1.5h5.25V6a.75.75 0 01.75-.75z\" clipRule=\"evenodd\" />\n//           </svg>\n//         </button>\n//       </div>\n//       <ul className='border-r border-gray-300 pr-2'>\n//         {projects.map((project, index) => (\n//           <div key={index} className=\"flex items-center justify-between\">\n//             <Link to={`/${project._id}`} onClick={(e) => handleLocation(e, project._id)} className=\"flex-grow\">\n//               <li className={`px-5 py-1.5 mb-1 text-gray-600 font text-sm capitalize select-none hover:text-indigo-600 rounded transition-colors hover:bg-indigo-200/80 ${paramsWindow === project._id && 'text-indigo-600 bg-indigo-200/80'}`}>\n//                 {project.title}\n//               </li>\n//             </Link>\n//             <DropdownButton\n//               as=\"div\"\n//               id={`dropdown-${project._id}`}\n//               drop=\"end\"\n//               variant=\"link\"\n//               title={<Gear />}\n//               className=\"p-0 m-0\"\n//             >\n//               <Dropdown.Item onClick={() => openEditModal(project)}>Edit</Dropdown.Item>\n//               <Dropdown.Item onClick={() => deleteProject(project._id)}>Delete</Dropdown.Item>\n//             </DropdownButton>\n//           </div>\n//         ))}\n//       </ul>\n//       <AddProjectModal isModalOpen={isModalOpen} closeModal={closeModal} addProjectToList={addProjectToList} />\n//       {selectedProject && (\n//         <EditProjectModal\n//           isOpen={isEditModalOpen}\n//           onClose={closeEditModal}\n//           project={selectedProject}\n//           onEdit={editProject}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n// export default Sidebar;","map":{"version":3,"names":[],"sources":["C:/Desktop/mern-intern/frontend/src/components/Sidebar.js"],"sourcesContent":["// import React, { useCallback, useEffect, useState } from 'react';\r\n// import AddProjectModal from './AddProjectModal';\r\n// import EditProjectModal from './EditProjectModal';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\r\n// import { Gear } from 'react-bootstrap-icons';\r\n\r\n// const Sidebar = ({ onAddProject, onDeleteProject }) => {\r\n//   const [isModalOpen, setModalState] = useState(false);\r\n//   const [isEditModalOpen, setEditModalOpen] = useState(false);\r\n//   const [projects, setProjects] = useState([]);\r\n//   const [selectedProject, setSelectedProject] = useState(null);\r\n//   const [paramsWindow, setParamsWindow] = useState(window.location.pathname.slice(1));\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     // Mock API call to fetch projects\r\n//     const mockProjects = [\r\n//       { _id: '1', title: 'Project 1', description: 'Description 1' },\r\n//       { _id: '2', title: 'Project 2', description: 'Description 2' },\r\n//     ];\r\n//     setProjects(mockProjects);\r\n\r\n//     document.addEventListener('projectUpdate', ({ detail }) => {\r\n//       setProjects((prevProjects) => [...prevProjects, detail]);\r\n//     });\r\n\r\n//     return () => {\r\n//       document.removeEventListener('projectUpdate', {}, false);\r\n//     };\r\n//   }, []);\r\n\r\n//   const handleLocation = (e, projectId) => {\r\n//     e.preventDefault();\r\n//     setParamsWindow(projectId);\r\n//     navigate(`/${projectId}`);\r\n//   };\r\n\r\n//   const openModal = useCallback(() => {\r\n//     setModalState(true);\r\n//   }, []);\r\n\r\n//   const closeModal = useCallback(() => {\r\n//     setModalState(false);\r\n//   }, []);\r\n\r\n//   const addProjectToList = (newProject) => {\r\n//     setProjects([...projects, newProject]);\r\n//     onAddProject(newProject);\r\n//   };\r\n\r\n//   const openEditModal = (project) => {\r\n//     setSelectedProject(project);\r\n//     setEditModalOpen(true);\r\n//   };\r\n\r\n//   const closeEditModal = () => {\r\n//     setEditModalOpen(false);\r\n//     setSelectedProject(null);\r\n//   };\r\n\r\n//   const editProject = (updatedProject) => {\r\n//     setProjects(projects.map((project) => (project._id === updatedProject._id ? updatedProject : project)));\r\n//   };\r\n\r\n//   const deleteProject = (projectId) => {\r\n//     setProjects(projects.filter((project) => project._id !== projectId));\r\n//     onDeleteProject(projectId);\r\n//   };\r\n\r\n//   return (\r\n//     <div className='py-5'>\r\n//       <div className=\"px-4 mb-3 flex items-center justify-between\">\r\n//         <span className='mr-2' style={{ marginRight: '25%' }}>Projects</span>\r\n//         <button onClick={openModal} className='bg-indigo-200 rounded-full p-[2px] focus:outline-none focus:ring focus:ring-indigo-200 focus:ring-offset-1'>\r\n//           <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"w-5 h-5 text-indigo-600\">\r\n//             <path fillRule=\"evenodd\" d=\"M12 5.25a.75.75 0 01.75.75v5.25H18a.75.75 0 010 1.5h-5.25V18a.75.75 0 01-1.5 0v-5.25H6a.75.75 0 010-1.5h5.25V6a.75.75 0 01.75-.75z\" clipRule=\"evenodd\" />\r\n//           </svg>\r\n//         </button>\r\n//       </div>\r\n//       <ul className='border-r border-gray-300 pr-2'>\r\n//         {projects.map((project, index) => (\r\n//           <div key={index} className=\"flex items-center justify-between\">\r\n//             <Link to={`/${project._id}`} onClick={(e) => handleLocation(e, project._id)} className=\"flex-grow\">\r\n//               <li className={`px-5 py-1.5 mb-1 text-gray-600 font text-sm capitalize select-none hover:text-indigo-600 rounded transition-colors hover:bg-indigo-200/80 ${paramsWindow === project._id && 'text-indigo-600 bg-indigo-200/80'}`}>\r\n//                 {project.title}\r\n//               </li>\r\n//             </Link>\r\n//             <DropdownButton\r\n//               as=\"div\"\r\n//               id={`dropdown-${project._id}`}\r\n//               drop=\"end\"\r\n//               variant=\"link\"\r\n//               title={<Gear />}\r\n//               className=\"p-0 m-0\"\r\n//             >\r\n//               <Dropdown.Item onClick={() => openEditModal(project)}>Edit</Dropdown.Item>\r\n//               <Dropdown.Item onClick={() => deleteProject(project._id)}>Delete</Dropdown.Item>\r\n//             </DropdownButton>\r\n//           </div>\r\n//         ))}\r\n//       </ul>\r\n//       <AddProjectModal isModalOpen={isModalOpen} closeModal={closeModal} addProjectToList={addProjectToList} />\r\n//       {selectedProject && (\r\n//         <EditProjectModal\r\n//           isOpen={isEditModalOpen}\r\n//           onClose={closeEditModal}\r\n//           project={selectedProject}\r\n//           onEdit={editProject}\r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Sidebar;"],"mappings},"metadata":{},"sourceType":"module"}